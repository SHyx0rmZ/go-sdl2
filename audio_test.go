package sdl

import (
	"io"
	"testing"
	"unsafe"
)

var wav = []byte{
	0x52, 0x49, 0x46, 0x46, 0x24, 0x00, 0x00, 0x00,
	0x57, 0x41, 0x56, 0x45, 0x66, 0x6d, 0x74, 0x20,
	0x10, 0x00, 0x00, 0x00, 0x01, 0x00, 0x02, 0x00,
	0x44, 0xac, 0x00, 0x00, 0x10, 0xb1, 0x02, 0x00,
	0x04, 0x00, 0x10, 0x00, 0x64, 0x61, 0x74, 0x61,
	0x00, 0x00, 0x00, 0x00,
}

func BenchmarkLoadWAVRW(b *testing.B) {
	ops, err := RWFromConstMem(unsafe.Pointer(&wav[0]), len(wav))
	if err != nil {
		b.Fatal(err)
	}
	var spec AudioSpec
	b.ReportAllocs()
	b.ResetTimer()
	for i := 0; i < b.N; i++ {
		_, err := LoadWAVRW(ops, false, &spec)
		if err != nil {
			b.Fatal(err)
		}
		_, err = ops.Seek(0, io.SeekStart)
		if err != nil {
			b.Fatal(err)
		}
	}
}
